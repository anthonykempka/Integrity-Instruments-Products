C L "MAIN" 0 189 1 "FUNCTION"
C L "MAIN" 0 189 2 "FUNCTION"
D G "__PCH__" 0 1092 ""4.068""
D G "__DEVICE__" 0 1092 "6520"
D G "__DATE__" 0 1092 ""24-Feb-08""
D G "__TIME__" 0 1092 ""21:19:54"" "USBM400 Firmware"
d G "PIN_A0" 1 22 "31744"
d G "PIN_A1" 1 23 "31745"
d G "PIN_A2" 1 24 "31746"
d G "PIN_A3" 1 25 "31747"
d G "PIN_A4" 1 26 "31748"
d G "PIN_A5" 1 27 "31749"
d G "PIN_A6" 1 28 "31750"
d G "PIN_B0" 1 30 "31752"
d G "PIN_B1" 1 31 "31753"
d G "PIN_B2" 1 32 "31754"
d G "PIN_B3" 1 33 "31755"
d G "PIN_B4" 1 34 "31756"
d G "PIN_B5" 1 35 "31757"
d G "PIN_B6" 1 36 "31758"
d G "PIN_B7" 1 37 "31759"
d G "PIN_C0" 1 39 "31760"
d G "PIN_C1" 1 40 "31761"
d G "PIN_C2" 1 41 "31762"
d G "PIN_C3" 1 42 "31763"
d G "PIN_C4" 1 43 "31764"
d G "PIN_C5" 1 44 "31765"
d G "PIN_C6" 1 45 "31766"
d G "PIN_C7" 1 46 "31767"
d G "PIN_D0" 1 48 "31768"
d G "PIN_D1" 1 49 "31769"
d G "PIN_D2" 1 50 "31770"
d G "PIN_D3" 1 51 "31771"
d G "PIN_D4" 1 52 "31772"
d G "PIN_D5" 1 53 "31773"
d G "PIN_D6" 1 54 "31774"
d G "PIN_D7" 1 55 "31775"
d G "PIN_E0" 1 57 "31776"
d G "PIN_E1" 1 58 "31777"
d G "PIN_E2" 1 59 "31778"
d G "PIN_E3" 1 60 "31779"
d G "PIN_E4" 1 61 "31780"
d G "PIN_E5" 1 62 "31781"
d G "PIN_E6" 1 63 "31782"
d G "PIN_E7" 1 64 "31783"
d G "PIN_F0" 1 66 "31784"
d G "PIN_F1" 1 67 "31785"
d G "PIN_F2" 1 68 "31786"
d G "PIN_F3" 1 69 "31787"
d G "PIN_F4" 1 70 "31788"
d G "PIN_F5" 1 71 "31789"
d G "PIN_F6" 1 72 "31790"
d G "PIN_F7" 1 73 "31791"
d G "PIN_G0" 1 75 "31792"
d G "PIN_G1" 1 76 "31793"
d G "PIN_G2" 1 77 "31794"
d G "PIN_G3" 1 78 "31795"
d G "PIN_G4" 1 79 "31796"
d G "FALSE" 1 82 "0"
d G "TRUE" 1 83 "1"
d G "BYTE" 1 85 "int8"
d G "BOOLEAN" 1 86 "int1"
d G "getc" 1 88 "getch"
d G "fgetc" 1 89 "getch"
d G "getchar" 1 90 "getch"
d G "putc" 1 91 "putchar"
d G "fputc" 1 92 "putchar"
d G "fgets" 1 93 "gets"
d G "fputs" 1 94 "puts"
d G "WDT_TIMEOUT" 1 100 "7"
d G "MCLR_FROM_SLEEP" 1 101 "11"
d G "MCLR_FROM_RUN" 1 102 "15"
d G "NORMAL_POWER_UP" 1 103 "12"
d G "BROWNOUT_RESTART" 1 104 "14"
d G "WDT_FROM_SLEEP" 1 105 "3"
d G "RESET_INSTRUCTION" 1 106 "0"
d G "RTCC_INTERNAL" 1 113 "0"
d G "RTCC_EXT_L_TO_H" 1 114 "32"
d G "RTCC_EXT_H_TO_L" 1 115 "48"
d G "RTCC_DIV_1" 1 117 "8"
d G "RTCC_DIV_2" 1 118 "0"
d G "RTCC_DIV_4" 1 119 "1"
d G "RTCC_DIV_8" 1 120 "2"
d G "RTCC_DIV_16" 1 121 "3"
d G "RTCC_DIV_32" 1 122 "4"
d G "RTCC_DIV_64" 1 123 "5"
d G "RTCC_DIV_128" 1 124 "6"
d G "RTCC_DIV_256" 1 125 "7"
d G "RTCC_OFF" 1 127 "0x80"
d G "RTCC_8_BIT" 1 129 "0x40"
d G "WDT_ON" 1 140 "0x100"
d G "WDT_OFF" 1 141 "0"
d G "T1_DISABLED" 1 148 "0"
d G "T1_INTERNAL" 1 149 "0x85"
d G "T1_EXTERNAL" 1 150 "0x87"
d G "T1_EXTERNAL_SYNC" 1 151 "0x83"
d G "T1_CLK_OUT" 1 153 "8"
d G "T1_DIV_BY_1" 1 155 "0"
d G "T1_DIV_BY_2" 1 156 "0x10"
d G "T1_DIV_BY_4" 1 157 "0x20"
d G "T1_DIV_BY_8" 1 158 "0x30"
d G "T2_DISABLED" 1 163 "0"
d G "T2_DIV_BY_1" 1 164 "4"
d G "T2_DIV_BY_4" 1 165 "5"
d G "T2_DIV_BY_16" 1 166 "6"
d G "T3_DISABLED" 1 172 "0"
d G "T3_INTERNAL" 1 173 "0x85"
d G "T3_EXTERNAL" 1 174 "0x87"
d G "T3_EXTERNAL_SYNC" 1 175 "0x83"
d G "T3_DIV_BY_1" 1 177 "0"
d G "T3_DIV_BY_2" 1 178 "0x10"
d G "T3_DIV_BY_4" 1 179 "0x20"
d G "T3_DIV_BY_8" 1 180 "0x30"
d G "T4_DISABLED" 1 185 "0"
d G "T4_DIV_BY_1" 1 186 "4"
d G "T4_DIV_BY_4" 1 187 "5"
d G "T4_DIV_BY_16" 1 188 "6"
d G "CCP_OFF" 1 194 "0"
d G "CCP_CAPTURE_FE" 1 195 "4"
d G "CCP_CAPTURE_RE" 1 196 "5"
d G "CCP_CAPTURE_DIV_4" 1 197 "6"
d G "CCP_CAPTURE_DIV_16" 1 198 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 199 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 200 "9"
d G "CCP_COMPARE_INT" 1 201 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 202 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 203 "0xB"
d G "CCP_PWM" 1 204 "0xC"
d G "CCP_PWM_PLUS_1" 1 205 "0x1c"
d G "CCP_PWM_PLUS_2" 1 206 "0x2c"
d G "CCP_PWM_PLUS_3" 1 207 "0x3c"
d G "CCP_USE_TIMER3" 1 208 "0x100"
v G "CCP_1" 1 209 "int16"
v G "CCP_2" 1 213 "int16"
v G "CCP_3" 1 217 "int16"
v G "CCP_4" 1 221 "int16"
v G "CCP_5" 1 225 "int16"
d G "T3_CCP1_TO_5" 1 231 "0x48"
d G "T3_CCP2_TO_5" 1 232 "0x8"
d G "T3_CCP3_TO_5" 1 233 "0x40"
d G "PSP_ENABLED" 1 240 "0x10"
d G "PSP_DISABLED" 1 241 "0"
d G "SPI_MASTER" 1 248 "0x20"
d G "SPI_SLAVE" 1 249 "0x24"
d G "SPI_L_TO_H" 1 250 "0"
d G "SPI_H_TO_L" 1 251 "0x10"
d G "SPI_CLK_DIV_4" 1 252 "0"
d G "SPI_CLK_DIV_16" 1 253 "1"
d G "SPI_CLK_DIV_64" 1 254 "2"
d G "SPI_CLK_T2" 1 255 "3"
d G "SPI_SS_DISABLED" 1 256 "1"
d G "SPI_SAMPLE_AT_END" 1 258 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 259 "0x4000"
d G "UART_ADDRESS" 1 265 "2"
d G "UART_DATA" 1 266 "4"
d G "F6_F5_F4_F5" 1 270 "0x70ff04"
d G "F6_F5_F4_F3_OUT_ON_F2_F1" 1 271 "0x78F903"
d G "F6_F5_F4_F5_OUT_ON_F2_F1" 1 272 "0x70F905"
d G "NC_NC_NC_NC" 1 273 "0x00ff07"
d G "F6_F5_F4_F3" 1 274 "0x78ff02"
d G "F6_F5_NC_NC_OUT_ON_F2" 1 275 "0x60FB01"
d G "F6_VR_F4_VR" 1 276 "0x50ff06"
d G "F5_VR_F3_VR" 1 277 "0x28ff0e"
d G "VREF_LOW" 1 285 "0xa0"
d G "VREF_HIGH" 1 286 "0x80"
d G "VREF_F5" 1 288 "0x40"
d G "VREF_COMP" 1 289 "0x10"
d G "LVD_LVDIN" 1 294 "0x1F"
d G "LVD_46" 1 295 "0x1E"
d G "LVD_43" 1 296 "0x1D"
d G "LVD_41" 1 297 "0x1C"
d G "LVD_40" 1 298 "0x1B"
d G "LVD_37" 1 299 "0x1A"
d G "LVD_36" 1 300 "0x19"
d G "LVD_34" 1 301 "0x18"
d G "LVD_31" 1 302 "0x17"
d G "LVD_29" 1 303 "0x16"
d G "LVD_28" 1 304 "0x15"
d G "LVD_26" 1 305 "0x14"
d G "LVD_25" 1 306 "0x13"
d G "LVD_23" 1 307 "0x12"
d G "LVD_21" 1 308 "0x11"
d G "OSC_TIMER1" 1 314 "1"
d G "OSC_NORMAL" 1 315 "0"
d G "ADC_OFF" 1 322 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 323 "0x100"
d G "ADC_CLOCK_DIV_4" 1 324 "0x04"
d G "ADC_CLOCK_DIV_8" 1 325 "0x01"
d G "ADC_CLOCK_DIV_16" 1 326 "0x05"
d G "ADC_CLOCK_DIV_32" 1 327 "0x02"
d G "ADC_CLOCK_DIV_64" 1 328 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 329 "0x07" "Internal 2-6us"
d G "NO_ANALOGS" 1 332 "0x0F" "None"
d G "ALL_ANALOG" 1 333 "0x00" "A0 A1 A2 A3 A5 F0 F1 F2 F3 F4 F5 F6"
d G "AN0_TO_AN10" 1 334 "0x04" "A0 A1 A2 A3 A5 F0 F1 F2 F3 F4 F5"
d G "AN0_TO_AN9" 1 335 "0x05" "A0 A1 A2 A3 A5 F0 F1 F2 F3 F4"
d G "AN0_TO_AN8" 1 336 "0x06" "A0 A1 A2 A3 A5 F0 F1 F2 F3"
d G "AN0_TO_AN7" 1 337 "0x07" "A0 A1 A2 A3 A5 F0 F1 F2"
d G "AN0_TO_AN6" 1 338 "0x08" "A0 A1 A2 A3 A5 F0 F1"
d G "AN0_TO_AN5" 1 339 "0x09" "A0 A1 A2 A3 A5 F0"
d G "AN0_TO_AN4" 1 340 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 341 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 342 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 343 "0x0D" "A0 A1"
d G "AN0" 1 344 "0x0E" "A0"
d G "ANALOG_AN0_TO_AN10" 1 345 "0x04" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN9" 1 346 "0x05" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN8" 1 347 "0x06" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN7" 1 348 "0x07" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN6" 1 349 "0x08" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN5" 1 350 "0x09" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN4" 1 351 "0x0A" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN3" 1 352 "0x0B" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN2" 1 353 "0x0C" "!old only provided for compatibility"
d G "ANALOG_AN0_TO_AN1" 1 354 "0x0D" "!old only provided for compatibility"
d G "ANALOG_AN0" 1 355 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 358 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 359 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 360 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 361 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 365 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 366 "1"
d G "ADC_READ_ONLY" 1 367 "6"
d G "L_TO_H" 1 379 "0x40"
d G "H_TO_L" 1 380 "0"
d G "GLOBAL" 1 382 "0xF2C0"
d G "INT_RTCC" 1 383 "0xF220"
d G "INT_TIMER0" 1 384 "0xF220"
d G "INT_TIMER1" 1 385 "0x9D01"
d G "INT_TIMER2" 1 386 "0x9D02"
d G "INT_TIMER3" 1 387 "0xA002"
d G "INT_EXT" 1 388 "0xF210"
d G "INT_EXT1" 1 389 "0xF008"
d G "INT_EXT2" 1 390 "0xF010"
d G "INT_RB" 1 391 "0xFFF208"
d G "INT_PSP" 1 392 "0x9D80"
d G "INT_AD" 1 393 "0x9D40"
d G "INT_RDA" 1 394 "0x9D20"
d G "INT_TBE" 1 395 "0x9D10"
d G "INT_SSP" 1 396 "0x9D08"
d G "INT_CCP1" 1 397 "0x9D04"
d G "INT_CCP2" 1 398 "0xA001"
d G "INT_BUSCOL" 1 399 "0xA008"
d G "INT_LOWVOLT" 1 400 "0xA004"
d G "INT_COMP" 1 401 "0xA040"
d G "INT_EEPROM" 1 402 "0xA010"
d G "INT_RDA2" 1 403 "0xA320"
d G "INT_TBE2" 1 404 "0xA310"
d G "INT_TIMER4" 1 405 "0xA308"
d G "INT_CCP3" 1 406 "0xA301"
d G "INT_CCP4" 1 407 "0xA302"
d G "INT_CCP5" 1 408 "0xA304"
d G "INT_EXT3" 1 409 "0xF020"
D G "EEPROM_MOD_ADDRESS" 0 57 "0x00"
D G "EEPROM_DIR_PORT1" 0 58 "0x02"
D G "EEPROM_DIR_PORT2" 0 59 "0x03"
D G "EEPROM_POD_PORT1" 0 60 "0x06"
D G "EEPROM_POD_PORT2" 0 61 "0x07"
D G "EEPROM_EXPANDER_FLAG" 0 62 "0x08"
D G "EEPROM_POD_DA_MSB_CH0" 0 63 "0x09"
D G "EEPROM_POD_DA_LSB_CH0" 0 64 "0x0A"
D G "EEPROM_POD_DA_MSB_CH1" 0 65 "0x0B"
D G "EEPROM_POD_DA_LSB_CH1" 0 66 "0x0C"
D G "EEPROM_AD_SAMPLE_CLK" 0 67 "0x0D"
D G "EEPROM_AD_CONFIG" 0 69 "0x11"
D G "EEPROM_AD_CONFIG_END" 0 70 "0x21"
D G "EEPROM_SN_START" 0 74 "0x30"
D G "EEPROM_SN_END" 0 75 "0x38"
D G "AD_CS" 0 78 "PIN_A0"
D G "DAC_CS" 0 79 "PIN_A1"
D G "USB_CS" 0 80 "PIN_A2"
D G "USB_RD" 0 81 "PIN_B2"
D G "USB_WR" 0 82 "PIN_B3"
D G "USB_A0" 0 83 "PIN_B4"
D G "USB_RESET" 0 84 "PIN_C1"
D G "LED_RED" 0 87 "PIN_G3"
D G "LED_GREEN" 0 88 "PIN_G4"
D G "SPI_NOT_SET" 0 91 "0"
D G "SPI_ADC_FAST" 0 92 "2"
D G "SPI_DAC" 0 93 "2"
D G "SPI_ADC_SLOW" 0 94 "3"
D G "EXPANDER_FLAG" 0 98 "1"
V G "EEFlags" 0 100 "int8"
V G "Adc_Control" 0 102 "int8[16]" "EEPROM locations 0x11 to 0x20"
V G "SpiMode" 0 104 "int8"
V G "StreamFlag" 0 106 "int8"
V G "bWaitingTxFifoEmpty" 0 107 "int8"
V G "LedGreenFlag" 0 109 "int8"
V G "LedCount" 0 110 "int8"
V G "Port1_Dir" 0 112 "int8"
V G "Port2_Dir" 0 113 "int8"
V G "DAC_CH0" 0 114 "int16"
V G "DAC_CH1" 0 115 "int16"
V G "PulseCount" 0 117 "int32"
V G "ADC_Buffer" 0 119 "int16[32]" "A/D buffer for Streaming mode"
V G "CommandBuffer" 0 121 "int8[8]" "Command and response buffers"
V G "ResponseBuffer" 0 122 "int8[10]" "Constant table definitions"
V G "BIN_TO_HEX_TBL" 0 125 "int8[16]"
C L "trigger_led_red" 0 14 1 "FUNCTION"
F G "trigger_led_red" 0 129 "void()"
F G "led_on_green" 0 130 "void()" "Additional includes"
D G "_STRING" 2 12 ""
D G "_STDDEF" 3 13 ""
D G "ptrdiff_t" 3 18 "unsigned int16"
D G "size_t" 3 21 "unsigned int8"
D G "wchar_t" 3 22 "char"
D G "NULL" 3 23 "0"
D G "offsetof" 3 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 4 12 ""
D G "islower" 4 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 4 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 4 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 4 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 4 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 4 19 "(x)  ((x)==' ')"
D G "isxdigit" 4 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 4 21 "(x)  ((x)<' ')"
D G "isprint" 4 22 "(x)  ((x)>=' ')"
D G "isgraph" 4 23 "(x)  ((x)>' ')"
D G "ispunct" 4 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "led_on_green" 2 19 10 "FUNCTION"
V L "s1" 2 34 "*int8"
V L "s2" 2 34 "*int8"
V L "n" 2 34 "int8"
F G "memmove" 2 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 2 36 "*int8"
V L "sc2" 2 37 "*int8"
C L "strcopy" 2 19 3 "FUNCTION"
V L "s1" 2 53 "*int8"
V L "s2" 2 53 "*int8"
F G "strcopy" 2 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 2 55 "*int8"
C L "strncpy" 2 19 4 "FUNCTION"
V L "s1" 2 69 "*int8"
V L "s2" 2 69 "*int8"
V L "n" 2 69 "int8"
F G "strncpy" 2 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 2 71 "*int8"
C L "strcat" 2 19 3 "FUNCTION"
V L "s1" 2 86 "*int8"
V L "s2" 2 86 "*int8"
F G "strcat" 2 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 2 88 "*int8"
C L "strncat" 2 19 2 "FUNCTION"
V L "s1" 2 104 "*int8"
V L "s2" 2 104 "*int8"
V L "n" 2 104 "int8"
F G "strncat" 2 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 2 106 "*int8"
C L "memcmp" 2 19 3 "FUNCTION"
V L "s1" 2 128 "*int8"
V L "s2" 2 128 "*int8"
V L "n" 2 128 "int8"
F G "memcmp" 2 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 2 130 "*int8"
V L "su2" 2 130 "*int8"
C L "strcmp" 2 19 2 "FUNCTION"
V L "s1" 2 142 "*int8"
V L "s2" 2 142 "*int8"
F G "strcmp" 2 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 2 19 2 "FUNCTION"
V L "s1" 2 152 "*int8"
V L "s2" 2 152 "*int8"
F G "strcoll" 2 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 2 19 4 "FUNCTION"
V L "s1" 2 165 "*int8"
V L "s2" 2 165 "*int8"
V L "n" 2 165 "int8"
F G "strncmp" 2 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 2 19 3 "FUNCTION"
V L "s1" 2 177 "*int8"
V L "s2" 2 177 "*int8"
V L "n" 2 177 "int8"
F G "strxfrm" 2 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 2 179 "*int8"
V L "n1" 2 180 "int8"
C L "memchr" 2 19 3 "FUNCTION"
V L "s" 2 199 "*int8"
V L "c" 2 199 "int8"
V L "n" 2 199 "int8"
F G "memchr" 2 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 2 201 "int8"
V L "su" 2 202 "*int8"
C L "strchr" 2 19 2 "FUNCTION"
V L "s" 2 213 "*int8"
V L "c" 2 213 "int8"
F G "strchr" 2 214 "*int8(*int8 s,int8 c)"
V L "s1" 2 225 "*int8"
V L "s2" 2 225 "*int8"
F G "strcspn" 2 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 2 227 "*int8"
V L "sc2" 2 227 "*int8"
C L "strpbrk" 2 19 4 "FUNCTION"
V L "s1" 2 240 "*int8"
V L "s2" 2 240 "*int8"
F G "strpbrk" 2 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 2 242 "*int8"
V L "sc2" 2 242 "*int8"
C L "strrchr" 2 19 2 "FUNCTION"
V L "s" 2 255 "*int8"
V L "c" 2 255 "int8"
F G "strrchr" 2 256 "*int8(*int8 s,int8 c)"
V L "p" 2 257 "*int8"
V L "s1" 2 270 "*int8"
V L "s2" 2 270 "*int8"
F G "strspn" 2 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 2 272 "*int8"
V L "sc2" 2 272 "*int8"
C L "strstr" 2 19 6 "FUNCTION"
V L "s1" 2 289 "*int8"
V L "s2" 2 289 "*int8"
F G "strstr" 2 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 2 291 "*int8"
V L "t" 2 291 "*int8"
C L "strtok" 2 19 13 "FUNCTION"
V L "s1" 2 328 "*int8"
V L "s2" 2 328 "*int8"
F G "strtok" 2 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 2 330 "*int8"
V L "end" 2 330 "*int8"
V L "save" 2 331 "*int8"
V L "s" 2 377 "*int8"
F G "strlen" 2 378 "*int8(*int8 s)"
V L "sc" 2 379 "*int8"
C L "stricmp" 2 19 2 "FUNCTION"
V L "s1" 2 388 "*int8"
V L "s2" 2 388 "*int8"
F G "stricmp" 2 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 2 19 3 "FUNCTION"
V L "s" 2 402 "*int8"
F G "strlwr" 2 403 "*int8(*int8 s)"
V L "p" 2 404 "*int8"
C L "setup_spi_fast" 0 137 3 "FUNCTION"
F G "setup_spi_fast" 0 143 "void()" "SSPCON1 = 0x21;     // SSPCON1: SPEN=1, CKP=0 (idle high), Fosc/16"
C L "setup_spi_fast" 0 137 1 "FUNCTION"
C L "setup_spi_fast" 0 137 2 "FUNCTION"
C L "setup_spi_clk64" 0 137 3 "FUNCTION"
F G "setup_spi_clk64" 0 159 "void()"
C L "setup_spi_clk64" 0 137 1 "FUNCTION"
C L "setup_spi_clk64" 0 137 2 "FUNCTION"
C L "setup_spi_mode" 0 137 2 "FUNCTION"
V L "mode" 0 171 "int8"
F G "setup_spi_mode" 0 172 "void(int8 mode)" "SPI_ADC_FAST, SPI_DAC"
C L "setup_spi_mode" 0 137 1 "FUNCTION"
C G "" 6 11 1 "*"
D G "__USB_DESCRIPTORS__" 6 15 ""
D G "USB_NUM_ENDPOINTS" 6 20 "4"
D G "USB_NUM_CLASSES" 6 23 "0"
D G "GET_STATUS" 6 28 "0"
D G "CLEAR_FEATURE" 6 29 "1"
D G "SET_FEATURE" 6 30 "3"
D G "SET_ADDRESS" 6 31 "5"
D G "GET_DESCRIPTOR" 6 32 "6"
D G "SET_DESCRIPTOR" 6 33 "7"
D G "GET_CONFIGURATION" 6 34 "8"
D G "SET_CONFIGURATION" 6 35 "9"
D G "GET_INTERFACE" 6 36 "10"
D G "SET_INTERFACE" 6 37 "11"
D G "SYNCH_FRAME" 6 38 "12"
D G "USB_DEVICE_DESC_KEY" 6 43 "0x01"
D G "USB_CONFIG_DESC_KEY" 6 44 "0x02"
D G "USB_STRING_DESC_KEY" 6 45 "0x03"
D G "USB_INTERFACE_DESC_KEY" 6 46 "0x04"
D G "USB_ENDPOINT_DESC_KEY" 6 47 "0x05"
D G "USB_MAX_EP0_PACKET_LENGTH" 6 50 "8"
D G "USB_DEVICE_DESC_LEN" 6 55 "18"
D G "USB_CONFIG_DESC_LEN" 6 56 "9"
D G "USB_CONFIG_DESC_TOTAL_LEN" 6 57 "46"
D G "USB_INTERFACE_DESC_LEN" 6 58 "9"
D G "USB_ENDPOINT_DESC_LEN" 6 59 "7"
D G "STR_INDX_NONE" 6 62 "0x00" "Unused string index (no string)"
D G "STR_INDX_LANG" 6 63 "0x00" "Language identifier"
D G "STR_INDX_MFG" 6 64 "0x01" "Manufacturer string index"
D G "STR_INDX_PROD" 6 65 "0x02" "Product string index"
D G "STR_INDX_SN" 6 66 "0x03" "Serial number string index"
V G "USB_DEVICE_DESC" 6 71 "int8[18]"
V G "USB_CONFIG_DESC" 6 91 "int8[46]" "Config_descriptor for config index 1"
D G "USB_STRING_0_LEN" 6 154 "4"
D G "USB_STRING_1_LEN" 6 155 "56"
D G "USB_STRING_2_LEN" 6 156 "50"
D G "USB_STRING_SN_LEN" 6 157 "18"
V G "USB_STRING_0" 6 159 "int8[4]" "string index 0 is special"
V G "USB_STRING_1" 6 166 "int8[56]" "we defined string index 1 earlier as manuf string"
V G "USB_STRING_2" 6 199 "int8[50]" "we defined string index 2 as description of product"
V G "USB_STRING_SN" 6 230 "int8[18]"
V G "USB_STRING_SN_RAM" 6 244 "int8[18]"
D G "USB_MAX_ENDPOINTS" 5 21 "5" "number of bidrectional endpoints.  960x has 1 control port and 6 individual endpoints = 4 bidrectional endpoints"
C G "" 7 1 1 "*"
C G "" 7 1 1 "*"
C G "" 7 1 1 "*"
C G "" 7 1 1 "*"
C G "" 7 1 1 "*"
C G "" 7 1 1 "*"
C G "" 7 1 1 "*"
C G "" 7 1 1 "*"
C G "" 7 1 1 "*"
C G "" 7 1 1 "*"
C G "" 7 1 1 "*"
D G "__usb_reg_h__" 7 18 ""
D G "MCNTRL" 7 23 "0x00" "Main control register"
D G "CCONF" 7 24 "0x01" "Clk. config. register"
D G "RID" 7 25 "0x03" "Rev. ID      register"
D G "FAR" 7 26 "0x04" "Func address register"
D G "NFSR" 7 27 "0x05" "Node func st register"
D G "MAEV" 7 28 "0x06" "Main event   register"
D G "MAMSK" 7 29 "0x07" "Main mask    register"
D G "ALTEV" 7 30 "0x08" "Alt. event   register"
D G "ALTMSK" 7 31 "0x09" "ALT  mask    register"
D G "TXEV" 7 32 "0x0A" "TX   event   register"
D G "TXMSK" 7 33 "0x0B" "TX   mask    register"
D G "RXEV" 7 34 "0x0C" "RX   event   register"
D G "RXMSK" 7 35 "0x0D" "RX   mask    register"
D G "NAKEV" 7 36 "0x0E" "NAK  event   register"
D G "NAKMSK" 7 37 "0x0F" "NAK  mask    register"
D G "FWEV" 7 38 "0x10" "FIFO warning register"
D G "FWMSK" 7 39 "0x11" "FIFO warning mask"
D G "FNH" 7 40 "0x12" "Frame nbr hi register"
D G "FNL" 7 41 "0x13" "Frame nbr lo register"
D G "DMACNTRL" 7 42 "0x14" "DMA  control register"
D G "DMAEV" 7 43 "0x15					" "DMA  event   register"
D G "DMAMSK" 7 44 "0x16					" "DMA  mask	   register"
D G "DMACNT" 7 45 "0x18				" "DMA  count   register"
D G "DMAERR" 7 46 "0x19					" "DMA  error counnt register"
D G "WKUP" 7 47 "0x1b"
D G "EPC0" 7 49 "0x20" "Endpoint0    register"
D G "TXD0" 7 50 "0x21" "TX   data    register 0"
D G "TXS0" 7 51 "0x22" "TX   status  register 0"
D G "TXC0" 7 52 "0x23" "TX   command register 0"
D G "RXD0" 7 54 "0x25" "RX   data    register 0"
D G "RXS0" 7 55 "0x26" "RX   status  register 0"
D G "RXC0" 7 56 "0x27" "RX   command register 0"
D G "EPC1" 7 58 "0x28" "Endpoint1    register"
D G "TXD1" 7 59 "0x29" "TX   data    register 1"
D G "TXS1" 7 60 "0x2A" "TX   status  register 1"
D G "TXC1" 7 61 "0x2B" "TX   command register 1"
D G "EPC2" 7 63 "0x2C" "Endpoint2    register"
D G "RXD1" 7 64 "0x2D" "RX   data    register 1"
D G "RXS1" 7 65 "0x2E" "RX   status  register 1"
D G "RXC1" 7 66 "0x2F" "RX   command register 1"
D G "EPC3" 7 68 "0x30" "Endpoint3    register"
D G "TXD2" 7 69 "0x31" "TX   data    register 2"
D G "TXS2" 7 70 "0x32" "TX   status  register 2"
D G "TXC2" 7 71 "0x33" "TX   command register 2"
D G "EPC4" 7 73 "0x34" "Endpoint4    register"
D G "RXD2" 7 74 "0x35" "RX   data    register 2"
D G "RXS2" 7 75 "0x36" "RX   status  register 2"
D G "RXC2" 7 76 "0x37" "RX   command register 2"
D G "EPC5" 7 78 "0x38" "Endpoint5    register"
D G "TXD3" 7 79 "0x39" "TX   data    register 3"
D G "TXS3" 7 80 "0x3A" "TX   status  register 3"
D G "TXC3" 7 81 "0x3B" "TX   command register 3"
D G "EPC6" 7 83 "0x3C" "Endpoint6    register"
D G "RXD3" 7 84 "0x3D" "RX   data    register 3"
D G "RXS3" 7 85 "0x3E" "RX   status  register 3"
D G "RXC3" 7 86 "0x3F" "RX   command register 3"
D G "SRST" 7 93 "0x01" "software reset"
D G "DBG" 7 94 "0x02" "debug mode"
D G "VGE" 7 95 "0x04" "voltage regulator enable"
D G "NAT" 7 96 "0x08" "node attached"
D G "INT_DIS" 7 97 "0x00" "interrupts disabled"
D G "INT_L_O" 7 98 "0x40" "act lo ints, open drain"
D G "INT_H_P" 7 99 "0x80" "act hi in	ts, push pull"
D G "INT_L_P" 7 100 "0xC0" "act lo ints, push pull"
D G "AD_EN" 7 103 "0x80" "address enable"
D G "DEF" 7 106 "0x40" "force def. adr (0 only)"
D G "STALL" 7 107 "0x80" "force stall handshakes"
D G "ISO" 7 108 "0x20" "set for isochr. (1-3)"
D G "EP_EN" 7 109 "0x10" "enables endpt.  (1-3)"
D G "RST_ST" 7 112 "0x00" "reset       state"
D G "RSM_ST" 7 113 "0x01" "resume      state"
D G "OPR_ST" 7 114 "0x02" "operational state"
D G "SUS_ST" 7 115 "0x03" "suspend     state"
D G "WARN" 7 118 "0x01" "warning bit has been set"
D G "ALT" 7 119 "0x02" "alternate event"
D G "TX_EV" 7 120 "0x04" "transmit event"
D G "FRAME" 7 121 "0x08" "SOF packet received"
D G "NAK" 7 122 "0x10" "NAK event"
D G "ULD" 7 123 "0x20" "unlock locked detected"
D G "RX_EV" 7 124 "0x40" "receive event"
D G "INTR_E" 7 125 "0x80" "master interrupt enable"
D G "ALT_DMA" 7 128 "0x04					" "DMA event"
D G "ALT_EOP" 7 129 "0x08" "end of packet"
D G "ALT_SD3" 7 130 "0x10" "3 ms suspend"
D G "ALT_SD5" 7 131 "0x20" "5 ms suspend"
D G "ALT_RESET" 7 132 "0x40" "reset  detected"
D G "ALT_RESUME" 7 133 "0x80" "resume detected"
D G "TX_FIFO0" 7 136 "0x01" "TX_DONE, FIFO 0"
D G "TX_FIFO1" 7 137 "0x02" "TX_DONE, FIFO 1"
D G "TX_FIFO2" 7 138 "0x04" "TX_DONE, FIFO 2"
D G "TX_FIFO3" 7 139 "0x08" "TX_DONE, FIFO 3"
D G "TX_UDRN0" 7 140 "0x10" "TX_URUN, FIFO 0"
D G "TX_UDRN1" 7 141 "0x20" "TX_URUN, FIFO 1"
D G "TX_UDRN2" 7 142 "0x40" "TX_URUN, FIFO 2"
D G "TX_UDRN3" 7 143 "0x80" "TX_URUN, FIFO 3"
D G "RX_FIFO0" 7 146 "0x01" "RX_DONE, FIFO 0"
D G "RX_FIFO1" 7 147 "0x02" "RX_DONE, FIFO 1"
D G "RX_FIFO2" 7 148 "0x04" "RX_DONE, FIFO 2"
D G "RX_FIFO3" 7 149 "0x08" "RX_DONE, FIFO 3"
D G "RX_OVRN0" 7 150 "0x10" "RX_OVRN, FIFO 0"
D G "RX_OVRN1" 7 151 "0x20" "RX_OVRN, FIFO 1"
D G "RX_OVRN2" 7 152 "0x40" "RX_OVRN, FIFO 2"
D G "RX_OVRN3" 7 153 "0x80" "RX_OVRN, FIFO 3"
D G "NAK_IN0" 7 156 "0x01" "IN  NAK, FIFO 0"
D G "NAK_IN1" 7 157 "0x02" "IN  NAK, FIFO 1"
D G "NAK_IN2" 7 158 "0x04" "IN  NAK, FIFO 2"
D G "NAK_IN3" 7 159 "0x08" "IN  NAK, FIFO 3"
D G "NAK_OUT0" 7 160 "0x10" "OUT NAK, FIFO 0"
D G "NAK_OUT1" 7 161 "0x20" "OUT NAK, FIFO 1"
D G "NAK_OUT2" 7 162 "0x40" "OUT NAK, FIFO 2"
D G "NAK_OUT3" 7 163 "0x80" "OUT NAK, FIFO 3"
D G "DMA_DSHLT" 7 166 "0x01				" "DMA Software Halt"
D G "DMA_DERR" 7 167 "0x02				" "DMA Error"
D G "DMA_DCNT" 7 168 "0x04				" "DMA Count"
D G "DMA_DSIZ" 7 169 "0x08				" "DMA Size"
D G "DMA_NTGL" 7 170 "0x20				" "Next Toggle"
D G "DMA_DMOD" 7 173 "0x08				" "DMA Mode"
D G "DMA_ADMA" 7 174 "0x10				" "Automatic DMA"
D G "DMA_DTGL" 7 175 "0x20				" "DMA Toggle"
D G "IGNRXTGL" 7 176 "0x40				" "Ignore RX Toggle"
D G "DMA_DEN" 7 177 "0x80				" "DMA Enable"
D G "DMA_AEH" 7 180 "0x80				" "Automatic Error Handling"
D G "IGN_IN" 7 183 "0x10" "ignore in  tokens"
D G "TX_EN" 7 186 "0x01" "transmit enable"
D G "TX_LAST" 7 187 "0x02" "specifies last byte"
D G "TX_TOGL" 7 188 "0x04" "specifies PID used"
D G "FLUSH" 7 189 "0x08" "flushes all FIFO data"
D G "RFF" 7 190 "0x10				" "refill FIFO"
D G "IGN_ISOMSK" 7 191 "0x80				" "ignore ISO Mask"
D G "TX_EBYTES" 7 194 "0x1F					" "available empty bytes"
D G "TX_DONE" 7 195 "0x20" "transmit done"
D G "ACK_STAT" 7 196 "0x40" "ack status of xmission"
D G "RX_EN" 7 199 "0x01" "receive  enable"
D G "IGN_OUT" 7 200 "0x02" "ignore out tokens"
D G "IGN_SETUP" 7 201 "0x04" "ignore setup tokens"
D G "RX_LAST" 7 204 "0x10" "indicates RCOUNT valid"
D G "RX_TOGL" 7 205 "0x20" "last pkt was DATA1 PID"
D G "SETUP_R" 7 206 "0x40" "setup packet received"
D G "RX_ERR" 7 207 "0x80" "last packet had an error"
C L "usb_init" 5 29 1 "FUNCTION"
F G "usb_init" 5 31 "void()"
F G "usbn_get_version" 5 32 "int8()" "ISR prototypes and associated handlers"
F G "usb_isr" 5 37 "void()"
F G "handle_warn" 5 38 "void()"
F G "handle_alt" 5 39 "void()"
F G "handle_txev" 5 40 "void()"
F G "handle_frame" 5 41 "void()"
F G "handle_uld" 5 42 "void()"
F G "handle_rxev" 5 43 "void()" "Functions that change with SPI vs. Memory Mapped interfaces"
V L "address" 5 48 "int8"
V L "data" 5 48 "int8"
F G "usbn_write" 5 48 "void(int8 address,int8 data)"
V L "address" 5 49 "int8"
F G "usbn_read" 5 49 "int8(int8 address)" "USBN9603 endpoints           EP Addressing"
C L "usbn_read" 5 29 13 "FUNCTION"
V G "ep0_rx_buffer" 5 71 "int8[8]"
V G "ep0_tx_buffer" 5 72 "int8[8]" "Types of Xfer's supported in control EP0"
D G "NO_XFER" 5 78 "0"
D G "DEVICE_DESC" 5 79 "1"
D G "CONFIG_DESC" 5 80 "2"
D G "STRING_DESC" 5 81 "3"
D G "ZERO_LEN_XFER" 5 82 "4"
V G "XferEP0" 5 90 "{int8 nXferType,int8 nCurPosition,int8 nLength,int8 nStrIndex}"
V G "endpoint_stat" 5 96 "{int8 toggle_bit,int8 FIFO_status}[5]"
T G "FIFO_status_t" 5 103 "" ""
V G "alt_mask" 5 108 "int8"
V G "setaddress" 5 109 "int8"
C L "usbn_read" 5 29 2 "FUNCTION"
V G "stalld" 5 113 "int8" "Current USB configuration (only 1 here)"
V G "usb_cfg" 5 116 "int8"
F G "endpoint_status_init" 5 119 "void()"
V L "i" 5 120 "int8"
C L "endpoint_status_init" 5 29 1 "FUNCTION"
C L "endpoint_status_init" 5 29 1 "FUNCTION"
F G "reset_usb" 5 143 "void()"
C L "reset_usb" 5 29 1 "FUNCTION"
C L "reset_usb" 5 29 2 "FUNCTION"
C L "reset_usb" 5 29 1 "FUNCTION"
C L "reset_usb" 5 29 3 "FUNCTION"
C L "reset_usb" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 8 "FUNCTION"
F G "usb_init" 5 182 "void()"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 2 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "usb_init" 5 29 1 "FUNCTION"
C L "XmitOnUSB0" 5 29 2 "FUNCTION"
F G "XmitOnUSB0" 5 229 "void()"
V L "i" 5 230 "int8"
V L "j" 5 231 "int8" ""
C L "XmitOnUSB0" 5 29 2 "FUNCTION"
C L "XmitOnUSB0" 5 29 1 "FUNCTION"
C L "XmitOnUSB0" 5 29 2 "FUNCTION"
C L "XmitOnUSB0" 5 29 1 "FUNCTION"
C L "XmitOnUSB0" 5 29 2 "FUNCTION"
C L "XmitOnUSB0" 5 29 1 "FUNCTION"
C L "XmitOnUSB0" 5 29 3 "FUNCTION"
C L "XmitOnUSB0" 5 29 2 "FUNCTION"
C L "XmitOnUSB0" 5 29 1 "FUNCTION"
C L "XmitOnUSB0" 5 29 2 "FUNCTION"
C L "XmitOnUSB0" 5 29 1 "FUNCTION"
C L "XmitOnUSB0" 5 29 2 "FUNCTION"
C L "XmitOnUSB0" 5 29 1 "FUNCTION"
C L "XmitOnUSB0" 5 29 2 "FUNCTION"
C L "XmitOnUSB0" 5 29 1 "FUNCTION"
C L "XmitOnUSB0" 5 29 1 "FUNCTION"
C L "XmitOnUSB0" 5 29 1 "FUNCTION"
C L "XmitOnUSB0" 5 29 1 "FUNCTION"
C L "XmitOnUSB0" 5 29 1 "FUNCTION"
C L "getdescriptor" 5 29 1 "FUNCTION"
V L "buf" 5 362 "*int8"
F G "getdescriptor" 5 362 "void(*int8 buf)" "Set the information for sending this descriptor over multiple packets"
C L "getdescriptor" 5 29 1 "FUNCTION"
C L "getdescriptor" 5 29 1 "FUNCTION"
C L "getdescriptor" 5 29 1 "FUNCTION"
C L "getdescriptor" 5 29 2 "FUNCTION"
C L "getdescriptor" 5 29 1 "FUNCTION"
C L "getdescriptor" 5 29 1 "FUNCTION"
C L "getdescriptor" 5 29 1 "FUNCTION"
C L "getdescriptor" 5 29 1 "FUNCTION"
C L "getdescriptor" 5 29 1 "FUNCTION"
C L "getdescriptor" 5 29 1 "FUNCTION"
C L "getdescriptor" 5 29 1 "FUNCTION"
F G "clrfeature" 5 410 "void()"
C L "clrfeature" 5 29 1 "FUNCTION"
C L "clrfeature" 5 29 1 "FUNCTION"
C L "clrfeature" 5 29 1 "FUNCTION"
C L "clrfeature" 5 29 2 "FUNCTION"
C L "clrfeature" 5 29 1 "FUNCTION"
C L "clrfeature" 5 29 1 "FUNCTION"
C L "clrfeature" 5 29 1 "FUNCTION"
C L "clrfeature" 5 29 1 "FUNCTION"
C L "clrfeature" 5 29 1 "FUNCTION"
C L "clrfeature" 5 29 1 "FUNCTION"
C L "clrfeature" 5 29 1 "FUNCTION"
C L "clrfeature" 5 29 1 "FUNCTION"
F G "setconfiguration" 5 465 "void()"
V L "i" 5 466 "int8"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 2 "FUNCTION"
C L "setconfiguration" 5 29 2 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 2 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 2 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 2 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
C L "setconfiguration" 5 29 1 "FUNCTION"
F G "setfeature" 5 513 "void()"
C L "setfeature" 5 29 1 "FUNCTION"
C L "setfeature" 5 29 1 "FUNCTION"
C L "setfeature" 5 29 1 "FUNCTION"
C L "setfeature" 5 29 2 "FUNCTION"
C L "setfeature" 5 29 3 "FUNCTION"
C L "setfeature" 5 29 1 "FUNCTION"
C L "setfeature" 5 29 1 "FUNCTION"
C L "setfeature" 5 29 1 "FUNCTION"
C L "setfeature" 5 29 1 "FUNCTION"
C L "setfeature" 5 29 1 "FUNCTION"
C L "setfeature" 5 29 1 "FUNCTION"
C L "setfeature" 5 29 1 "FUNCTION"
F G "getstatus" 5 570 "void()"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 2 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "getstatus" 5 29 1 "FUNCTION"
C L "handle_setup" 5 29 1 "FUNCTION"
F G "handle_setup" 5 647 "void()"
V L "i" 5 648 "int8"
C L "handle_setup" 5 29 1 "FUNCTION"
C L "handle_setup" 5 29 1 "FUNCTION"
C L "handle_setup" 5 29 1 "FUNCTION"
C L "handle_setup" 5 29 1 "FUNCTION"
C L "handle_setup" 5 29 1 "FUNCTION"
C L "handle_setup" 5 29 1 "FUNCTION"
C L "handle_setup" 5 29 1 "FUNCTION"
C L "handle_setup" 5 29 1 "FUNCTION"
C L "handle_setup" 5 29 1 "FUNCTION"
C L "handle_setup" 5 29 1 "FUNCTION"
C L "handle_setup" 5 29 1 "FUNCTION"
C L "handle_setup" 5 29 3 "FUNCTION"
C L "handle_setup" 5 29 1 "FUNCTION"
F G "tx_1" 5 714 "void()"
V L "txstat" 5 715 "int8"
C L "tx_1" 5 29 1 "FUNCTION"
C L "tx_1" 5 29 2 "FUNCTION"
C L "tx_1" 5 29 2 "FUNCTION"
C L "tx_1" 5 29 1 "FUNCTION"
C L "tx_1" 5 29 1 "FUNCTION"
C L "tx_1" 5 29 1 "FUNCTION"
C L "tx_1" 5 29 1 "FUNCTION"
F G "tx_2" 5 739 "void()"
V L "txstat" 5 740 "int8"
C L "tx_2" 5 29 1 "FUNCTION"
C L "tx_2" 5 29 2 "FUNCTION"
C L "tx_2" 5 29 1 "FUNCTION"
C L "tx_2" 5 29 1 "FUNCTION"
F G "tx_3" 5 758 "void()"
V L "txstat" 5 759 "int8"
C L "tx_3" 5 29 1 "FUNCTION"
C L "tx_3" 5 29 2 "FUNCTION"
C L "tx_3" 5 29 3 "FUNCTION"
C L "tx_3" 5 29 1 "FUNCTION"
F G "rx_1" 5 779 "void()"
V L "i" 5 780 "int8"
V L "len" 5 780 "int8"
V L "rxstatus" 5 780 "int8"
V L "toggle" 5 780 "int8"
C L "rx_1" 5 29 4 "FUNCTION"
C L "rx_1" 5 29 1 "FUNCTION"
C L "rx_1" 5 29 1 "FUNCTION"
C L "rx_1" 5 29 1 "FUNCTION"
C L "rx_1" 5 29 1 "FUNCTION"
C L "rx_1" 5 29 1 "FUNCTION"
C L "rx_1" 5 29 1 "FUNCTION"
C L "rx_1" 5 29 1 "FUNCTION"
C L "rx_1" 5 29 1 "FUNCTION"
C L "rx_1" 5 29 1 "FUNCTION"
C L "rx_1" 5 29 2 "FUNCTION"
C L "rx_1" 5 29 1 "FUNCTION"
C L "rx_1" 5 29 1 "FUNCTION"
C L "rx_1" 5 29 1 "FUNCTION"
C L "usbn_get_version" 5 29 7 "FUNCTION"
F G "usbn_get_version" 5 844 "int8()"
C L "usb_isr" 5 29 14 "FUNCTION"
F G "usb_isr" 5 866 "void()"
V L "usbn_event" 5 867 "int8"
V L "i" 5 867 "int8" "Clear the interrupt manually and immediately so another can come in"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "usb_isr" 5 29 2 "FUNCTION"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "usb_isr" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 8 "FUNCTION"
F G "handle_alt" 5 947 "void()"
V L "alt_event" 5 948 "int8"
V L "i" 5 948 "int8"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 2 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_alt" 5 29 1 "FUNCTION"
C L "handle_txev" 5 29 5 "FUNCTION"
F G "handle_txev" 5 1011 "void()"
V L "txs" 5 1012 "int8"
V L "tx_event" 5 1013 "int8"
V L "i" 5 1013 "int8"
V L "event_mask" 5 1014 "int8"
C L "handle_txev" 5 29 1 "FUNCTION"
C L "handle_txev" 5 29 1 "FUNCTION"
C L "handle_txev" 5 29 1 "FUNCTION"
C L "handle_txev" 5 29 1 "FUNCTION"
C L "handle_txev" 5 29 1 "FUNCTION"
C L "handle_txev" 5 29 2 "FUNCTION"
C L "handle_txev" 5 29 1 "FUNCTION"
C L "handle_txev" 5 29 1 "FUNCTION"
C L "handle_txev" 5 1056 1 "*"
C L "handle_txev" 5 1056 1 "*"
C L "handle_txev" 5 1056 1 "*"
C L "handle_txev" 5 1056 1 "FUNCTION"
C L "handle_txev" 5 1056 1 "FUNCTION"
C L "handle_txev" 5 1056 1 "FUNCTION"
C L "handle_rxev" 5 1056 9 "FUNCTION"
F G "handle_rxev" 5 1110 "void()"
V L "rxstatus" 5 1111 "int8"
V L "len" 5 1111 "int8"
V L "i" 5 1111 "int8"
V L "rx_event" 5 1112 "int8"
V L "rx_event2" 5 1112 "int8"
V L "event_mask" 5 1113 "int8"
C L "handle_rxev" 5 1056 1 "FUNCTION"
C L "handle_rxev" 5 1056 1 "FUNCTION"
C L "handle_rxev" 5 1056 1 "FUNCTION"
C L "handle_rxev" 5 1056 1 "FUNCTION"
C L "handle_rxev" 5 1056 1 "FUNCTION"
C L "handle_rxev" 5 1056 1 "FUNCTION"
C L "handle_rxev" 5 1056 1 "FUNCTION"
C L "handle_rxev" 5 1056 2 "FUNCTION"
C L "handle_rxev" 5 1056 1 "FUNCTION"
C L "handle_rxev" 5 1056 1 "FUNCTION"
C L "handle_rxev" 5 1056 1 "FUNCTION"
C L "handle_rxev" 5 1056 3 "FUNCTION"
C L "handle_rxev" 5 1056 1 "FUNCTION"
C L "handle_rxev" 5 1056 1 "FUNCTION"
C L "handle_warn" 5 1056 6 "FUNCTION"
F G "handle_warn" 5 1201 "void()" "TODO: add code to handle when FIFOs get near full / empty"
C L "handle_frame" 5 1056 6 "FUNCTION"
F G "handle_frame" 5 1214 "void()" "TODO: add code if needed"
C L "handle_uld" 5 1056 5 "FUNCTION"
F G "handle_uld" 5 1225 "void()" "TODO: add code if needed"
C L "usbn_write" 5 1056 4 "FUNCTION"
V L "address" 5 1239 "int8"
V L "data" 5 1239 "int8"
F G "usbn_write" 5 1239 "void(int8 address,int8 data)" "Mask off bits address 7 and 6"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_write" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 4 "FUNCTION"
V L "address" 5 1294 "int8"
F G "usbn_read" 5 1294 "int8(int8 address)"
V L "data" 5 1295 "int8" "Mask off bits address 7 and 6"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 2 "FUNCTION"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 1 "FUNCTION"
C L "usbn_read" 5 1056 2 "FUNCTION"
C L "rd_eeprom" 0 191 2 "FUNCTION"
V L "address" 0 195 "int8"
F G "rd_eeprom" 0 196 "int8(int8 address)"
V L "data" 0 197 "int8"
C L "rd_eeprom" 0 191 1 "FUNCTION"
C L "rd_eeprom" 0 191 1 "FUNCTION"
C L "rd_eeprom" 0 191 1 "FUNCTION"
C L "rd_eeprom" 0 191 1 "FUNCTION"
C L "rd_eeprom" 0 191 1 "FUNCTION"
C L "wr_eeprom" 0 191 2 "FUNCTION"
V L "address" 0 212 "int8"
V L "data" 0 212 "int8"
F G "wr_eeprom" 0 213 "void(int8 address,int8 data)"
V L "i" 0 214 "int8" "Wait for any previous WRITE to complete"
C L "wr_eeprom" 0 191 1 "FUNCTION"
C L "wr_eeprom" 0 191 1 "FUNCTION"
C L "wr_eeprom" 0 191 1 "FUNCTION"
C L "wr_eeprom" 0 191 1 "FUNCTION"
C L "wr_eeprom" 0 191 1 "FUNCTION"
C L "wr_eeprom" 0 191 1 "FUNCTION"
C L "wr_eeprom" 0 191 5 "FUNCTION"
C L "wr_eeprom" 0 191 1 "FUNCTION"
C L "wr_eeprom" 0 191 1 "FUNCTION"
C L "update_dac" 0 191 3 "FUNCTION"
F G "update_dac" 0 253 "void()"
V L "data" 0 254 "int8" "Check and set SPI mode"
C L "update_dac" 0 191 1 "FUNCTION"
C L "update_dac" 0 191 1 "FUNCTION"
C L "acquire_adc" 0 191 1 "FUNCTION"
V L "control" 0 280 "int8"
F G "acquire_adc" 0 281 "int16(int8 control)"
V L "ad_sample" 0 282 "int16"
V L "data" 0 283 "int8" "Check and configure SPI if needed"
C L "acquire_adc" 0 191 1 "FUNCTION"
C L "acquire_adc" 0 191 1 "FUNCTION"
C L "acquire_adc" 0 191 1 "FUNCTION"
C L "acquire_adc" 0 191 1 "FUNCTION"
C L "acquire_adc" 0 191 1 "FUNCTION"
C L "acquire_adc" 0 191 1 "FUNCTION"
C L "acquire_adc" 0 191 2 "FUNCTION"
C L "acquire_adc" 0 191 1 "FUNCTION"
C L "config_adc" 0 191 2 "FUNCTION"
F G "config_adc" 0 318 "void()"
V L "data" 0 319 "int8" "Check and set SPI mode"
C L "config_adc" 0 191 2 "FUNCTION"
C L "config_adc" 0 191 1 "FUNCTION"
C L "config_adc" 0 191 8 "FUNCTION"
C L "config_adc" 0 191 1 "FUNCTION"
C L "led_on_red" 0 191 1 "FUNCTION"
F G "led_on_red" 0 358 "void()"
C L "led_on_green" 0 191 1 "FUNCTION"
F G "led_on_green" 0 368 "void()"
C L "led_off" 0 191 1 "FUNCTION"
F G "led_off" 0 378 "void()"
C L "trigger_led_red" 0 191 1 "FUNCTION"
F G "trigger_led_red" 0 389 "void()" "Only start the Red sequence if it was Green"
C L "trigger_led_red" 0 191 2 "FUNCTION"
C L "write_port1" 0 191 2 "FUNCTION"
V L "value" 0 404 "int8"
F G "write_port1" 0 405 "void(int8 value)" "Expander inversion"
C L "write_port1" 0 191 1 "FUNCTION"
C L "read_port1" 0 191 2 "FUNCTION"
F G "read_port1" 0 421 "int8()"
V L "value" 0 422 "int8" "Read port data in"
C L "read_port1" 0 191 1 "FUNCTION"
C L "write_port2" 0 191 2 "FUNCTION"
V L "value" 0 437 "int8"
F G "write_port2" 0 438 "void(int8 value)" "Expander inversion"
C L "write_port2" 0 191 1 "FUNCTION"
C L "read_port2" 0 191 2 "FUNCTION"
F G "read_port2" 0 452 "int8()"
V L "value" 0 453 "int8" "Read port data in"
C L "read_port2" 0 191 1 "FUNCTION"
C L "set_dir_port1" 0 191 2 "FUNCTION"
V L "direction" 0 468 "int8"
F G "set_dir_port1" 0 469 "void(int8 direction)"
C L "set_dir_port1" 0 191 1 "FUNCTION"
C L "get_dir_port1" 0 191 2 "FUNCTION"
F G "get_dir_port1" 0 482 "int8()"
C L "set_dir_port2" 0 191 2 "FUNCTION"
V L "direction" 0 490 "int8"
F G "set_dir_port2" 0 491 "void(int8 direction)"
C L "set_dir_port2" 0 191 1 "FUNCTION"
C L "get_dir_port2" 0 191 2 "FUNCTION"
F G "get_dir_port2" 0 504 "int8()"
C L "hex_to_bin" 0 191 1 "FUNCTION"
V L "ptr" 0 512 "*int8"
F G "hex_to_bin" 0 513 "int8(*int8 ptr)"
V L "value" 0 514 "int8"
V L "i" 0 514 "int8"
V L "tmp_ptr" 0 515 "*int8"
C L "hex_to_bin" 0 191 1 "FUNCTION"
C L "hex_to_bin" 0 191 1 "FUNCTION"
C L "bin_to_hex" 0 191 1 "FUNCTION"
V L "value" 0 543 "int8"
V L "ptr" 0 543 "*int8"
F G "bin_to_hex" 0 544 "void(int8 value,*int8 ptr)"
V L "tbl_index" 0 545 "int8"
V L "tmp_ptr" 0 546 "*int8"
C L "bin_to_hex" 0 191 1 "FUNCTION"
C L "bin_to_hex" 0 191 1 "FUNCTION"
C L "timer0_isr" 0 191 1 "FUNCTION"
F G "timer0_isr" 0 568 "void()"
C L "timer1_isr" 0 191 1 "FUNCTION"
F G "timer1_isr" 0 578 "void()" "(40Mhz Clk / 4) = 10 Mhz source to Timer1"
C L "timer1_isr" 0 191 1 "FUNCTION"
C L "timer1_isr" 0 191 1 "FUNCTION"
C L "timer1_isr" 0 191 1 "FUNCTION"
C L "timer1_isr" 0 191 1 "FUNCTION"
C L "timer1_isr" 0 191 1 "FUNCTION"
C L "timer1_isr" 0 191 1 "FUNCTION"
C L "timer1_isr" 0 191 1 "FUNCTION"
C L "timer1_isr" 0 191 1 "FUNCTION"
C L "update_eesettings" 0 191 1 "FUNCTION"
F G "update_eesettings" 0 618 "void()"
V L "i" 0 619 "int8"
V L "j" 0 619 "int8" "Read flags out of EEPROM"
C L "update_eesettings" 0 191 1 "FUNCTION"
C L "update_eesettings" 0 191 1 "FUNCTION"
C L "update_eesettings" 0 191 2 "FUNCTION"
C L "update_eesettings" 0 191 4 "FUNCTION"
C L "update_eesettings" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
F G "MAIN" 0 660 "void()"
V L "i" 0 662 "int8"
V L "j" 0 662 "int8"
V L "k" 0 662 "int8"
V L "x" 0 662 "int8"
V L "temp" 0 663 "int16" "Setup the built-int ADC. The enables all PORT_A to general purpose I/O"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 2 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 2 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 3 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 2 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 2 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 4 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 4 "FUNCTION"
C L "MAIN" 0 191 2 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 2 "FUNCTION"
C L "MAIN" 0 191 3 "FUNCTION"
C L "MAIN" 0 191 2 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 2 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 2 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
C L "MAIN" 0 191 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "output_f" 1 0
F B "output_g" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "input_f" 0 0
F B "input_g" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "set_tris_f" 1 0
F B "set_tris_g" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "get_tris_f" 0 0
F B "get_tris_g" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_timer_4" 3 0
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_ccp3" 1 0
F B "set_pwm3_duty" 1 0
F B "setup_ccp4" 1 0
F B "set_pwm4_duty" 1 0
F B "setup_ccp5" 1 0
F B "set_pwm5_duty" 1 0
F B "setup_vref" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0

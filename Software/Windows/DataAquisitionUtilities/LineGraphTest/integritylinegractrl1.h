#pragma once

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CIntegritylinegractrl1 wrapper class

class CIntegritylinegractrl1 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CIntegritylinegractrl1)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xB68EE2FB, 0xA4D5, 0x4580, { 0x93, 0x1C, 0x3D, 0x43, 0xE8, 0x5D, 0x72, 0x4D } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName, LPCTSTR lpszWindowName, DWORD dwStyle,
						const RECT& rect, CWnd* pParentWnd, UINT nID, 
						CCreateContext* pContext = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); 
	}

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle, const RECT& rect, CWnd* pParentWnd, 
				UINT nID, CFile* pPersist = NULL, BOOL bStorage = FALSE,
				BSTR bstrLicKey = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); 
	}

// Attributes
public:


// Operations
public:

// _DIntegrityLineGraph

// Functions
//

	void AboutBox()
	{
		InvokeHelper(DISPID_ABOUTBOX, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
	}
	double get_dElement(unsigned short index)
	{
		double result;
		static BYTE parms[] = VTS_UI2 ;
		InvokeHelper(0x1, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, parms, index);
		return result;
	}
	void put_dElement(unsigned short index, double newValue)
	{
		static BYTE parms[] = VTS_UI2 VTS_R8 ;
		InvokeHelper(0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, index, newValue);
	}
	CString get_strElement(unsigned short index)
	{
		CString result;
		static BYTE parms[] = VTS_UI2 ;
		InvokeHelper(0x2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms, index);
		return result;
	}
	void put_strElement(unsigned short index, LPCTSTR newValue)
	{
		static BYTE parms[] = VTS_UI2 VTS_BSTR ;
		InvokeHelper(0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, index, newValue);
	}
	unsigned long get_ulElementColor(short index)
	{
		unsigned long result;
		static BYTE parms[] = VTS_I2 ;
		InvokeHelper(0x6, DISPATCH_PROPERTYGET, VT_UI4, (void*)&result, parms, index);
		return result;
	}
	void put_ulElementColor(short index, unsigned long newValue)
	{
		static BYTE parms[] = VTS_I2 VTS_UI4 ;
		InvokeHelper(0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, index, newValue);
	}

// Properties
//

double GetdblMaxValue()
{
	double result;
	GetProperty(0x3, VT_R8, (void*)&result);
	return result;
}
void SetdblMaxValue(double propVal)
{
	SetProperty(0x3, VT_R8, propVal);
}
double GetdblMinValue()
{
	double result;
	GetProperty(0x4, VT_R8, (void*)&result);
	return result;
}
void SetdblMinValue(double propVal)
{
	SetProperty(0x4, VT_R8, propVal);
}
long GetlnNumElements()
{
	long result;
	GetProperty(0x5, VT_I4, (void*)&result);
	return result;
}
void SetlnNumElements(long propVal)
{
	SetProperty(0x5, VT_I4, propVal);
}


};

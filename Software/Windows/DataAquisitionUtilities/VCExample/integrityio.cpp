// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "integrityio.h"

/////////////////////////////////////////////////////////////////////////////
// CIntegrityIO

IMPLEMENT_DYNCREATE(CIntegrityIO, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CIntegrityIO properties

long CIntegrityIO::GetLnComPort()
{
	long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnComPort(long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

long CIntegrityIO::GetLnBaudRate()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnBaudRate(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

long CIntegrityIO::GetLnProtocol()
{
	long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnProtocol(long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

long CIntegrityIO::GetLnModuleAddress()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnModuleAddress(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

BOOL CIntegrityIO::GetBPortOpen()
{
	BOOL result;
	GetProperty(0x5, VT_BOOL, (void*)&result);
	return result;
}

void CIntegrityIO::SetBPortOpen(BOOL propVal)
{
	SetProperty(0x5, VT_BOOL, propVal);
}

long CIntegrityIO::GetLnCommTimeout()
{
	long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnCommTimeout(long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

double CIntegrityIO::GetDReferenceVoltage()
{
	double result;
	GetProperty(0x7, VT_R8, (void*)&result);
	return result;
}

void CIntegrityIO::SetDReferenceVoltage(double propVal)
{
	SetProperty(0x7, VT_R8, propVal);
}

long CIntegrityIO::GetLnAbout()
{
	long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnAbout(long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

long CIntegrityIO::GetLnLastError()
{
	long result;
	GetProperty(0x9, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnLastError(long propVal)
{
	SetProperty(0x9, VT_I4, propVal);
}

BOOL CIntegrityIO::GetBDialogDisable()
{
	BOOL result;
	GetProperty(0xa, VT_BOOL, (void*)&result);
	return result;
}

void CIntegrityIO::SetBDialogDisable(BOOL propVal)
{
	SetProperty(0xa, VT_BOOL, propVal);
}

long CIntegrityIO::GetLnSoftwareVersion()
{
	long result;
	GetProperty(0xb, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnSoftwareVersion(long propVal)
{
	SetProperty(0xb, VT_I4, propVal);
}

long CIntegrityIO::GetLnFirmwareVersion()
{
	long result;
	GetProperty(0xc, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnFirmwareVersion(long propVal)
{
	SetProperty(0xc, VT_I4, propVal);
}

long CIntegrityIO::GetLnDigitalPort()
{
	long result;
	GetProperty(0xd, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnDigitalPort(long propVal)
{
	SetProperty(0xd, VT_I4, propVal);
}

long CIntegrityIO::GetLnDigitalDirection()
{
	long result;
	GetProperty(0xe, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnDigitalDirection(long propVal)
{
	SetProperty(0xe, VT_I4, propVal);
}

long CIntegrityIO::GetLnPulseCount()
{
	long result;
	GetProperty(0xf, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnPulseCount(long propVal)
{
	SetProperty(0xf, VT_I4, propVal);
}

long CIntegrityIO::GetLnADCControl()
{
	long result;
	GetProperty(0x10, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnADCControl(long propVal)
{
	SetProperty(0x10, VT_I4, propVal);
}

double CIntegrityIO::GetDADCBipolar()
{
	double result;
	GetProperty(0x11, VT_R8, (void*)&result);
	return result;
}

void CIntegrityIO::SetDADCBipolar(double propVal)
{
	SetProperty(0x11, VT_R8, propVal);
}

long CIntegrityIO::GetLnDACControl()
{
	long result;
	GetProperty(0x12, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnDACControl(long propVal)
{
	SetProperty(0x12, VT_I4, propVal);
}

double CIntegrityIO::GetDDACOutput()
{
	double result;
	GetProperty(0x13, VT_R8, (void*)&result);
	return result;
}

void CIntegrityIO::SetDDACOutput(double propVal)
{
	SetProperty(0x13, VT_R8, propVal);
}

long CIntegrityIO::GetLnRcvErrCount()
{
	long result;
	GetProperty(0x14, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnRcvErrCount(long propVal)
{
	SetProperty(0x14, VT_I4, propVal);
}

BOOL CIntegrityIO::GetBPWMUpdate()
{
	BOOL result;
	GetProperty(0x15, VT_BOOL, (void*)&result);
	return result;
}

void CIntegrityIO::SetBPWMUpdate(BOOL propVal)
{
	SetProperty(0x15, VT_BOOL, propVal);
}

long CIntegrityIO::GetLnEEPROMAddress()
{
	long result;
	GetProperty(0x16, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnEEPROMAddress(long propVal)
{
	SetProperty(0x16, VT_I4, propVal);
}

long CIntegrityIO::GetLnEEPROMData()
{
	long result;
	GetProperty(0x17, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnEEPROMData(long propVal)
{
	SetProperty(0x17, VT_I4, propVal);
}

BOOL CIntegrityIO::GetBResetModule()
{
	BOOL result;
	GetProperty(0x18, VT_BOOL, (void*)&result);
	return result;
}

void CIntegrityIO::SetBResetModule(BOOL propVal)
{
	SetProperty(0x18, VT_BOOL, propVal);
}

long CIntegrityIO::GetLnPWMFreq()
{
	long result;
	GetProperty(0x19, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnPWMFreq(long propVal)
{
	SetProperty(0x19, VT_I4, propVal);
}

long CIntegrityIO::GetLnPWMDuty()
{
	long result;
	GetProperty(0x1a, VT_I4, (void*)&result);
	return result;
}

void CIntegrityIO::SetLnPWMDuty(long propVal)
{
	SetProperty(0x1a, VT_I4, propVal);
}

double CIntegrityIO::GetDADCUnipolar()
{
	double result;
	GetProperty(0x1b, VT_R8, (void*)&result);
	return result;
}

void CIntegrityIO::SetDADCUnipolar(double propVal)
{
	SetProperty(0x1b, VT_R8, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CIntegrityIO operations

void CIntegrityIO::SetDIOBit(long bitValue, long bitPosition)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bitValue, bitPosition);
}

long CIntegrityIO::GetDIOBit(long bitPosition)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		bitPosition);
	return result;
}

void CIntegrityIO::SetDIOBitDDR(long bitValue, long bitPosition)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x1e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bitValue, bitPosition);
}

long CIntegrityIO::GetDIOBitDDR(short bitPosition)
{
	long result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x1f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		bitPosition);
	return result;
}

void CIntegrityIO::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
